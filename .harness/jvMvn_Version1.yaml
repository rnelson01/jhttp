template:
    name: jvMvn
    identifier: jvMvn
    versionLabel: Version1
    type: Stage
    projectIdentifier: tempwf
    orgIdentifier: default
    spec:
        type: CI
        spec:
            cloneCodebase: true
            infrastructure:
                type: KubernetesDirect
                spec:
                    connectorRef: account.gcpsalescidemo
                    namespace: build
            execution:
                steps:
                    - step:
                          type: RestoreCacheGCS
                          name: Restore Cache
                          identifier: Restore_Cache
                          spec:
                              connectorRef: account.GCP
                              bucket: <+pipeline.name>
                              key: <+pipeline.name>-{{ checksum "pom.xml" }}
                              archiveFormat: Tar
                          when:
                              stageStatus: Success
                              condition: <+stage.variables.cache> == "T"
                          failureStrategies: []
                    - step:
                          type: Run
                          name: maven-build
                          identifier: mavenbuild
                          spec:
                              connectorRef: account.Harness_Docker_Connector
                              image: maven:3.5.2-jdk-8-alpine
                              command: mvn clean package -DskipTests
                              resources:
                                  limits:
                                      memory: 4G
                                      cpu: "1"
                    - step:
                          type: SaveCacheGCS
                          name: save cache
                          identifier: save_cache
                          spec:
                              connectorRef: account.GCP
                              bucket: <+Pipeline.name>
                              key: <+pipeline.name>-{{ checksum "pom.xml" }}
                              sourcePaths:
                                  - /root/.m2/repository
                              archiveFormat: Tar
                          when:
                              stageStatus: Success
                              condition: <+stage.variables.cache> == "T"
                          failureStrategies: []
                    - step:
                          type: BuildAndPushGCR
                          name: GCR
                          identifier: GCR
                          spec:
                              connectorRef: account.GCP
                              host: us.gcr.io
                              projectID: sales-209522
                              imageName: <+pipeline.name>
                              tags:
                                  - <+pipeline.sequenceId>
                          when:
                              stageStatus: Success
                              condition: <+stage.variables.PushGCR> == "T"
                          failureStrategies: []
            sharedPaths:
                - /root/.m2/repository
        variables:
            - name: Cache
              type: String
              value: T
            - name: PushGCR
              type: String
              value: T
